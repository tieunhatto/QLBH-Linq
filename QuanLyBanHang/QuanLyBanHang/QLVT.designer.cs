#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyBanHang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBanHang")]
	public partial class QLVTDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVATTU(VATTU instance);
    partial void UpdateVATTU(VATTU instance);
    partial void DeleteVATTU(VATTU instance);
    partial void InsertNHACC(NHACC instance);
    partial void UpdateNHACC(NHACC instance);
    partial void DeleteNHACC(NHACC instance);
    partial void InsertTONKHO(TONKHO instance);
    partial void UpdateTONKHO(TONKHO instance);
    partial void DeleteTONKHO(TONKHO instance);
    partial void InsertDONDH(DONDH instance);
    partial void UpdateDONDH(DONDH instance);
    partial void DeleteDONDH(DONDH instance);
    partial void InsertPNHAP(PNHAP instance);
    partial void UpdatePNHAP(PNHAP instance);
    partial void DeletePNHAP(PNHAP instance);
    partial void InsertPXUAT(PXUAT instance);
    partial void UpdatePXUAT(PXUAT instance);
    partial void DeletePXUAT(PXUAT instance);
    #endregion
		
		public QLVTDataContext() : 
				base(global::QuanLyBanHang.Properties.Settings.Default.QLBanHangConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLVTDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLVTDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLVTDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLVTDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VATTU> VATTUs
		{
			get
			{
				return this.GetTable<VATTU>();
			}
		}
		
		public System.Data.Linq.Table<NHACC> NHACCs
		{
			get
			{
				return this.GetTable<NHACC>();
			}
		}
		
		public System.Data.Linq.Table<TONKHO> TONKHOs
		{
			get
			{
				return this.GetTable<TONKHO>();
			}
		}
		
		public System.Data.Linq.Table<DONDH> DONDHs
		{
			get
			{
				return this.GetTable<DONDH>();
			}
		}
		
		public System.Data.Linq.Table<PNHAP> PNHAPs
		{
			get
			{
				return this.GetTable<PNHAP>();
			}
		}
		
		public System.Data.Linq.Table<PXUAT> PXUATs
		{
			get
			{
				return this.GetTable<PXUAT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VATTU")]
	public partial class VATTU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mavtu;
		
		private string _TenVTu;
		
		private string _Dvtinh;
		
		private System.Nullable<float> _Phantram;
		
		private EntitySet<TONKHO> _TONKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMavtuChanging(string value);
    partial void OnMavtuChanged();
    partial void OnTenVTuChanging(string value);
    partial void OnTenVTuChanged();
    partial void OnDvtinhChanging(string value);
    partial void OnDvtinhChanged();
    partial void OnPhantramChanging(System.Nullable<float> value);
    partial void OnPhantramChanged();
    #endregion
		
		public VATTU()
		{
			this._TONKHOs = new EntitySet<TONKHO>(new Action<TONKHO>(this.attach_TONKHOs), new Action<TONKHO>(this.detach_TONKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mavtu", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mavtu
		{
			get
			{
				return this._Mavtu;
			}
			set
			{
				if ((this._Mavtu != value))
				{
					this.OnMavtuChanging(value);
					this.SendPropertyChanging();
					this._Mavtu = value;
					this.SendPropertyChanged("Mavtu");
					this.OnMavtuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVTu", DbType="NVarChar(100)")]
		public string TenVTu
		{
			get
			{
				return this._TenVTu;
			}
			set
			{
				if ((this._TenVTu != value))
				{
					this.OnTenVTuChanging(value);
					this.SendPropertyChanging();
					this._TenVTu = value;
					this.SendPropertyChanged("TenVTu");
					this.OnTenVTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dvtinh", DbType="NVarChar(10)")]
		public string Dvtinh
		{
			get
			{
				return this._Dvtinh;
			}
			set
			{
				if ((this._Dvtinh != value))
				{
					this.OnDvtinhChanging(value);
					this.SendPropertyChanging();
					this._Dvtinh = value;
					this.SendPropertyChanged("Dvtinh");
					this.OnDvtinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phantram", DbType="Real")]
		public System.Nullable<float> Phantram
		{
			get
			{
				return this._Phantram;
			}
			set
			{
				if ((this._Phantram != value))
				{
					this.OnPhantramChanging(value);
					this.SendPropertyChanging();
					this._Phantram = value;
					this.SendPropertyChanged("Phantram");
					this.OnPhantramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VATTU_TONKHO", Storage="_TONKHOs", ThisKey="Mavtu", OtherKey="Mavtu")]
		public EntitySet<TONKHO> TONKHOs
		{
			get
			{
				return this._TONKHOs;
			}
			set
			{
				this._TONKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TONKHOs(TONKHO entity)
		{
			this.SendPropertyChanging();
			entity.VATTU = this;
		}
		
		private void detach_TONKHOs(TONKHO entity)
		{
			this.SendPropertyChanging();
			entity.VATTU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACC")]
	public partial class NHACC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _TenNCC;
		
		private string _Diachi;
		
		private string _Dienthoai;
		
		private EntitySet<DONDH> _DONDHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    #endregion
		
		public NHACC()
		{
			this._DONDHs = new EntitySet<DONDH>(new Action<DONDH>(this.attach_DONDHs), new Action<DONDH>(this.detach_DONDHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(100)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(200)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="NVarChar(20)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACC_DONDH", Storage="_DONDHs", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<DONDH> DONDHs
		{
			get
			{
				return this._DONDHs;
			}
			set
			{
				this._DONDHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONDHs(DONDH entity)
		{
			this.SendPropertyChanging();
			entity.NHACC = this;
		}
		
		private void detach_DONDHs(DONDH entity)
		{
			this.SendPropertyChanging();
			entity.NHACC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TONKHO")]
	public partial class TONKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NamThang;
		
		private string _Mavtu;
		
		private System.Nullable<int> _SLDau;
		
		private System.Nullable<int> _TongSLN;
		
		private System.Nullable<int> _TongSLX;
		
		private System.Nullable<int> _SLCuoi;
		
		private EntityRef<VATTU> _VATTU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNamThangChanging(string value);
    partial void OnNamThangChanged();
    partial void OnMavtuChanging(string value);
    partial void OnMavtuChanged();
    partial void OnSLDauChanging(System.Nullable<int> value);
    partial void OnSLDauChanged();
    partial void OnTongSLNChanging(System.Nullable<int> value);
    partial void OnTongSLNChanged();
    partial void OnTongSLXChanging(System.Nullable<int> value);
    partial void OnTongSLXChanged();
    partial void OnSLCuoiChanging(System.Nullable<int> value);
    partial void OnSLCuoiChanged();
    #endregion
		
		public TONKHO()
		{
			this._VATTU = default(EntityRef<VATTU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamThang", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NamThang
		{
			get
			{
				return this._NamThang;
			}
			set
			{
				if ((this._NamThang != value))
				{
					this.OnNamThangChanging(value);
					this.SendPropertyChanging();
					this._NamThang = value;
					this.SendPropertyChanged("NamThang");
					this.OnNamThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mavtu", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mavtu
		{
			get
			{
				return this._Mavtu;
			}
			set
			{
				if ((this._Mavtu != value))
				{
					if (this._VATTU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMavtuChanging(value);
					this.SendPropertyChanging();
					this._Mavtu = value;
					this.SendPropertyChanged("Mavtu");
					this.OnMavtuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLDau", DbType="Int")]
		public System.Nullable<int> SLDau
		{
			get
			{
				return this._SLDau;
			}
			set
			{
				if ((this._SLDau != value))
				{
					this.OnSLDauChanging(value);
					this.SendPropertyChanging();
					this._SLDau = value;
					this.SendPropertyChanged("SLDau");
					this.OnSLDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSLN", DbType="Int")]
		public System.Nullable<int> TongSLN
		{
			get
			{
				return this._TongSLN;
			}
			set
			{
				if ((this._TongSLN != value))
				{
					this.OnTongSLNChanging(value);
					this.SendPropertyChanging();
					this._TongSLN = value;
					this.SendPropertyChanged("TongSLN");
					this.OnTongSLNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSLX", DbType="Int")]
		public System.Nullable<int> TongSLX
		{
			get
			{
				return this._TongSLX;
			}
			set
			{
				if ((this._TongSLX != value))
				{
					this.OnTongSLXChanging(value);
					this.SendPropertyChanging();
					this._TongSLX = value;
					this.SendPropertyChanged("TongSLX");
					this.OnTongSLXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLCuoi", AutoSync=AutoSync.Always, DbType="Int", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SLCuoi
		{
			get
			{
				return this._SLCuoi;
			}
			set
			{
				if ((this._SLCuoi != value))
				{
					this.OnSLCuoiChanging(value);
					this.SendPropertyChanging();
					this._SLCuoi = value;
					this.SendPropertyChanged("SLCuoi");
					this.OnSLCuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VATTU_TONKHO", Storage="_VATTU", ThisKey="Mavtu", OtherKey="Mavtu", IsForeignKey=true)]
		public VATTU VATTU
		{
			get
			{
				return this._VATTU.Entity;
			}
			set
			{
				VATTU previousValue = this._VATTU.Entity;
				if (((previousValue != value) 
							|| (this._VATTU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VATTU.Entity = null;
						previousValue.TONKHOs.Remove(this);
					}
					this._VATTU.Entity = value;
					if ((value != null))
					{
						value.TONKHOs.Add(this);
						this._Mavtu = value.Mavtu;
					}
					else
					{
						this._Mavtu = default(string);
					}
					this.SendPropertyChanged("VATTU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONDH")]
	public partial class DONDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoDH;
		
		private System.Nullable<System.DateTime> _NgayDH;
		
		private string _MaNCC;
		
		private EntityRef<NHACC> _NHACC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDHChanging(string value);
    partial void OnSoDHChanged();
    partial void OnNgayDHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDHChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    #endregion
		
		public DONDH()
		{
			this._NHACC = default(EntityRef<NHACC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDH", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoDH
		{
			get
			{
				return this._SoDH;
			}
			set
			{
				if ((this._SoDH != value))
				{
					this.OnSoDHChanging(value);
					this.SendPropertyChanging();
					this._SoDH = value;
					this.SendPropertyChanged("SoDH");
					this.OnSoDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDH
		{
			get
			{
				return this._NgayDH;
			}
			set
			{
				if ((this._NgayDH != value))
				{
					this.OnNgayDHChanging(value);
					this.SendPropertyChanging();
					this._NgayDH = value;
					this.SendPropertyChanged("NgayDH");
					this.OnNgayDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NHACC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACC_DONDH", Storage="_NHACC", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NHACC NHACC
		{
			get
			{
				return this._NHACC.Entity;
			}
			set
			{
				NHACC previousValue = this._NHACC.Entity;
				if (((previousValue != value) 
							|| (this._NHACC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACC.Entity = null;
						previousValue.DONDHs.Remove(this);
					}
					this._NHACC.Entity = value;
					if ((value != null))
					{
						value.DONDHs.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NHACC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PNHAP")]
	public partial class PNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoPn;
		
		private System.DateTime _NgayNhap;
		
		private string _SoDH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPnChanging(string value);
    partial void OnSoPnChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnSoDHChanging(string value);
    partial void OnSoDHChanged();
    #endregion
		
		public PNHAP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPn", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPn
		{
			get
			{
				return this._SoPn;
			}
			set
			{
				if ((this._SoPn != value))
				{
					this.OnSoPnChanging(value);
					this.SendPropertyChanging();
					this._SoPn = value;
					this.SendPropertyChanged("SoPn");
					this.OnSoPnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDH", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string SoDH
		{
			get
			{
				return this._SoDH;
			}
			set
			{
				if ((this._SoDH != value))
				{
					this.OnSoDHChanging(value);
					this.SendPropertyChanging();
					this._SoDH = value;
					this.SendPropertyChanged("SoDH");
					this.OnSoDHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PXUAT")]
	public partial class PXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoPx;
		
		private System.DateTime _NgayXuat;
		
		private string _TenKH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoPxChanging(string value);
    partial void OnSoPxChanged();
    partial void OnNgayXuatChanging(System.DateTime value);
    partial void OnNgayXuatChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    #endregion
		
		public PXUAT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPx", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoPx
		{
			get
			{
				return this._SoPx;
			}
			set
			{
				if ((this._SoPx != value))
				{
					this.OnSoPxChanging(value);
					this.SendPropertyChanging();
					this._SoPx = value;
					this.SendPropertyChanged("SoPx");
					this.OnSoPxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayXuat
		{
			get
			{
				return this._NgayXuat;
			}
			set
			{
				if ((this._NgayXuat != value))
				{
					this.OnNgayXuatChanging(value);
					this.SendPropertyChanging();
					this._NgayXuat = value;
					this.SendPropertyChanged("NgayXuat");
					this.OnNgayXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
